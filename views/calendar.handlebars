<div class="modal">
    <div class="modal-background"></div>
    <div class="modal-content">
        <div class="box search-box ">
            <form>
                <div class="field">
                    <label class="label">Book a service</label>
                </div>
                <div class="field">
                    <div class="control" id="services">
                        <label class="radio">
                            Dog Walker
                            <input type="radio" name="service-type" id="walk">

                        </label>
                        <label class="radio" id="song-label">
                            Dog Grooming
                            <input type="radio" name="service-type" id="groom">

                        </label>
                    </div>
                </div>
                <div class="field">
                    <div class="control" id="times">
                    </div>
                </div>
                <div class="control">
                    <button class="button is-custom" id="book-btn">Book</button>
                    <button class="button is-custom" id="cancel-btn">Cancel</button>
                </div>
            </form>
        </div>
    </div>
    <button class="modal-close is-large" aria-label="close"></button>
</div>



<div id="showcase-wrapper">
    <div id="myCalendarWrapper"></div>
    <div id="example">
        <h3>currentValue:
            <p id="current-date"></p>
        </h3>
        <h3>currentValue.getDay():
            <p id="current-day"></p>
        </h3>
        <h3>currentValue.toDateSring():
            <p id="current-datestring"></p>
        </h3>
    </div>
</div>

<script src=" https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js">
</script>
<script src="/js/calander.js"></script>
<script src="/js/booking.js"></script>


<script>
    //let employees = ("{{ employees }}")
    //console.log(typeof employees)
    //let employees = "{{employees}}";
    //let something = JSON(employees)
    //console.log(something)
    //employees.forEach(element => {
    //    console.log(element)
    //});



    const nextYear = new Date().getFullYear() + 1;
    const myCalender = new CalendarPicker('#myCalendarWrapper', {
        // If max < min or min > max then the only available day will be today.
        min: new Date(),
        max: new Date(nextYear, 10) // NOTE: new Date(nextYear, 10) is "Sun Nov 01 <nextYear>"
    });

    const currentDateElement = document.getElementById('current-date');
    currentDateElement.textContent = myCalender.value;

    const currentDayElement = document.getElementById('current-day');
    currentDayElement.textContent = myCalender.value.getDay();

    const currentToDateString = document.getElementById('current-datestring');
    currentToDateString.textContent = myCalender.value.toDateString();
    console.log(event)

    let scheduleDate;
    const modalLabel = $(".label")

    function populateDate(currentValue) {
        const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
        let bookingMonth = months[currentValue.getMonth()];
        modalLabel.text(bookingMonth + ' ' + currentValue.getDate() + ', ' + currentValue.getFullYear());
    }
    const closeM = $(".modal-close");
    const modal = $(".modal");
    const cancel = $("#cancel-btn");
    closeM.click(function closeModal() {
        modal.removeClass("is-active");
    });

    cancel.click(function closeModal() {
        modal.removeClass("is-active");
    });


    function deleteChild() {
        let children = document.getElementById("times");
        let first = children.firstElementChild;
        while (first) {
            first.remove();
            first = children.firstElementChild;
        }
    }

    let times = document.getElementById('times');

    myCalender.onValueChange((currentValue) => {
        currentDateElement.textContent = currentValue;
        currentDayElement.textContent = currentValue.getDay();
        currentToDateString.textContent = currentValue.toDateString();

        scheduleDate = currentValue.getFullYear() + '-' + currentValue.getMonth() + '-' + currentValue.getDate();
        localStorage.setItem("scheduleDate", scheduleDate);
        console.log(scheduleDate);
        deleteChild();
        modal.addClass('is-active');
        populateDate(currentValue);
        getDatesTimeslots(scheduleDate)
    });

    function getDatesTimeslots(scheduleDate) {
        fetch("http://localhost:3001/api/schedule/dates")
            .then(response => response.json())
            .then(data => {
                console.log(data);
                for (const keys in data) {
                    if (keys === scheduleDate) {
                        let options = data[keys];
                        console.log(options.length);
                        for (let i = 0; i < options.length; i++) {
                            //console.log(data.scheduleDate[i]);
                            let newLabel = document.createElement('label');
                            newLabel.classList.add("radio");

                            console.log(typeof options[i]);
                            if (options[i] === "9" || options[i] === "10") {
                                newLabel.textContent = options[i] + " AM";
                            } else if (options[i] === "12") {
                                newLabel.textContent = options[i] + " PM";
                            } else if (options[i] === "13") {
                                newLabel.textContent = "1 PM";
                            } else if (options[i] === "14") {
                                newLabel.textContent = "2 PM";
                            } else if (options[i] === "15") {
                                newLabel.textContent = "3 PM";
                            } else if (options[i] === "16") {
                                newLabel.textContent = "4 PM";
                            }

                            let newInput = document.createElement('input');
                            newInput.type = "radio";
                            newInput.name = "slots";
                            newInput.value = options[i];
                            newInput.setAttribute("id", "slots" + `${options[i]}`);
                            times.appendChild(newLabel);
                            newLabel.appendChild(newInput);
                        }
                    }
                }
            })

    }


</script>